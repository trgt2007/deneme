/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPoolConfigurator,
  IPoolConfiguratorInterface,
} from "../../../../contracts/interfaces/IAaveV3.sol/IPoolConfigurator";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "aTokenImpl",
            type: "address",
          },
          {
            internalType: "address",
            name: "stableDebtTokenImpl",
            type: "address",
          },
          {
            internalType: "address",
            name: "variableDebtTokenImpl",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "underlyingAssetDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "interestRateStrategyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "incentivesController",
            type: "address",
          },
          {
            internalType: "string",
            name: "aTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "aTokenSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "variableDebtTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "variableDebtTokenSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "stableDebtTokenName",
            type: "string",
          },
          {
            internalType: "string",
            name: "stableDebtTokenSymbol",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolConfigurator.ConfigureReserveInput[]",
        name: "input",
        type: "tuple[]",
      },
    ],
    name: "initReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowCap",
        type: "uint256",
      },
    ],
    name: "setBorrowCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
    ],
    name: "setLiquidationBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "setReserveActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setReserveBorrowing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveFactor",
        type: "uint256",
      },
    ],
    name: "setReserveFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "bool",
        name: "freeze",
        type: "bool",
      },
    ],
    name: "setReserveFreeze",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplyCap",
        type: "uint256",
      },
    ],
    name: "setSupplyCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPoolConfigurator__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolConfiguratorInterface {
    return new Interface(_abi) as IPoolConfiguratorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPoolConfigurator {
    return new Contract(address, _abi, runner) as unknown as IPoolConfigurator;
  }
}
